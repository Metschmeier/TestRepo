// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Praktikum.Services.Data;

#nullable disable

namespace Praktikum.Services.Migrations
{
    [DbContext(typeof(BuchhaltungDbContext))]
    [Migration("20250724072121_SteuerBezeichnung")]
    partial class SteuerBezeichnung
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Praktikum.Types.Buchung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beschreibung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Betrag")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KategoriezeileId")
                        .HasColumnType("int");

                    b.Property<int>("KostenstellezeileId")
                        .HasColumnType("int");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<int>("PartnerzeileId")
                        .HasColumnType("int");

                    b.Property<int>("SteuersatzzeileId")
                        .HasColumnType("int");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriezeileId");

                    b.HasIndex("KostenstellezeileId");

                    b.HasIndex("PartnerzeileId");

                    b.HasIndex("SteuersatzzeileId");

                    b.ToTable("Buchungen");
                });

            modelBuilder.Entity("Praktikum.Types.Kategoriezeile", b =>
                {
                    b.Property<int>("KategoriezeileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriezeileId"));

                    b.Property<string>("KategorieName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KategorieNummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriezeileId");

                    b.ToTable("Kategorien");
                });

            modelBuilder.Entity("Praktikum.Types.Kostenstellezeile", b =>
                {
                    b.Property<int>("KostenstellezeileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KostenstellezeileId"));

                    b.Property<string>("KostenstelleBeschreibung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KostenstelleOrt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KostenstellezeileId");

                    b.ToTable("Kostenstellen");
                });

            modelBuilder.Entity("Praktikum.Types.Partnerzeile", b =>
                {
                    b.Property<int>("PartnerzeileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerzeileId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kontonummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerTyp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartnerzeileId");

                    b.ToTable("Partner");
                });

            modelBuilder.Entity("Praktikum.Types.Steuersatzzeile", b =>
                {
                    b.Property<int>("SteuersatzzeileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SteuersatzzeileId"));

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prozentsatz")
                        .HasColumnType("int");

                    b.HasKey("SteuersatzzeileId");

                    b.ToTable("Steuersaetze");
                });

            modelBuilder.Entity("Praktikum.Types.Buchung", b =>
                {
                    b.HasOne("Praktikum.Types.Kategoriezeile", "Kategorie")
                        .WithMany()
                        .HasForeignKey("KategoriezeileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Praktikum.Types.Kostenstellezeile", "Kostenstelle")
                        .WithMany()
                        .HasForeignKey("KostenstellezeileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Praktikum.Types.Partnerzeile", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerzeileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Praktikum.Types.Steuersatzzeile", "Steuersatz")
                        .WithMany()
                        .HasForeignKey("SteuersatzzeileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorie");

                    b.Navigation("Kostenstelle");

                    b.Navigation("Partner");

                    b.Navigation("Steuersatz");
                });
#pragma warning restore 612, 618
        }
    }
}
